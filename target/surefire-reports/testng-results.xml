<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="7" passed="6">
  <reporter-output>
    <line>
      <![CDATA[Successfully validated API response for inexistent country.
]]>
    </line>
    <line>
      <![CDATA[Successfully validated multiple countries in the response.
]]>
    </line>
  </reporter-output>
  <suite name="API HelloFresh Challenge Test Suite" duration-ms="3503" started-at="2018-07-02T11:50:02Z" finished-at="2018-07-02T11:50:05Z">
    <groups>
    </groups>
    <test name="APIRegresssionSuite" duration-ms="3503" started-at="2018-07-02T11:50:02Z" finished-at="2018-07-02T11:50:05Z">
      <class name="com.hellofresh.apitest.TestRestService">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.hellofresh.apitest.TestRestService@3fb6a447]" name="setup" is-config="true" duration-ms="453" started-at="2018-07-02T13:50:02Z" finished-at="2018-07-02T13:50:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="GetAllCountries()[pri:0, instance:com.hellofresh.apitest.TestRestService@3fb6a447]" name="GetAllCountries" duration-ms="1594" started-at="2018-07-02T13:50:02Z" finished-at="2018-07-02T13:50:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetAllCountries -->
        <test-method status="FAIL" signature="tryCreateNewCountry()[pri:0, instance:com.hellofresh.apitest.TestRestService@3fb6a447]" name="tryCreateNewCountry" duration-ms="1562" started-at="2018-07-02T13:50:02Z" finished-at="2018-07-02T13:50:04Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <201> doesn't match actual status code <200>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <201> doesn't match actual status code <200>.

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:60)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:235)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:451)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$2.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:613)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:120)
	at io.restassured.specification.ResponseSpecification$statusCode$1.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:128)
	at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:117)
	at com.hellofresh.apitest.TestRestService.tryCreateNewCountry(TestRestService.java:87)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryCreateNewCountry -->
        <test-method status="PASS" signature="validateGetAllCountries()[pri:0, instance:com.hellofresh.apitest.TestRestService@3fb6a447]" name="validateGetAllCountries" duration-ms="2406" started-at="2018-07-02T13:50:02Z" finished-at="2018-07-02T13:50:05Z">
          <reporter-output>
            <line>
              <![CDATA[Successfully validated multiple countries in the response.
]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateGetAllCountries -->
        <test-method status="PASS" signature="validateResponseForInexistentCountry()[pri:0, instance:com.hellofresh.apitest.TestRestService@3fb6a447]" name="validateResponseForInexistentCountry" duration-ms="703" started-at="2018-07-02T13:50:04Z" finished-at="2018-07-02T13:50:05Z">
          <reporter-output>
            <line>
              <![CDATA[Successfully validated API response for inexistent country.
]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateResponseForInexistentCountry -->
        <test-method status="PASS" signature="validateIndividualCountry(java.lang.String, java.lang.String)[pri:0, instance:com.hellofresh.apitest.TestRestService@3fb6a447]" name="validateIndividualCountry" duration-ms="625" started-at="2018-07-02T13:50:04Z" data-provider="getCountriesForSearch" finished-at="2018-07-02T13:50:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Germany]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[DE]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateIndividualCountry -->
        <test-method status="PASS" signature="validateIndividualCountry(java.lang.String, java.lang.String)[pri:0, instance:com.hellofresh.apitest.TestRestService@3fb6a447]" name="validateIndividualCountry" duration-ms="1252" started-at="2018-07-02T13:50:04Z" data-provider="getCountriesForSearch" finished-at="2018-07-02T13:50:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Great Britain]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[GB]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateIndividualCountry -->
        <test-method status="PASS" signature="validateIndividualCountry(java.lang.String, java.lang.String)[pri:0, instance:com.hellofresh.apitest.TestRestService@3fb6a447]" name="validateIndividualCountry" duration-ms="625" started-at="2018-07-02T13:50:04Z" data-provider="getCountriesForSearch" finished-at="2018-07-02T13:50:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[United States]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[US]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateIndividualCountry -->
      </class> <!-- com.hellofresh.apitest.TestRestService -->
    </test> <!-- APIRegresssionSuite -->
  </suite> <!-- API HelloFresh Challenge Test Suite -->
</testng-results>
